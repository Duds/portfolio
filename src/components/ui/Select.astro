---
export interface Option {
  value: string;
  label: string;
}
export interface Props {
  label: string;
  name: string;
  options: Option[];
  value?: string;
  placeholder?: string;
  error?: string;
}
const { label, name, options, value = '', placeholder = '', error = '' } = Astro.props;
---
<label class="block mb-2 font-medium text-sm text-neutral-800" for={name}>{label}</label>
<select
  id={name}
  name={name}
  class={`block w-full rounded border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition ${error ? 'border-red-500' : ''}`}
  aria-invalid={!!error}
  aria-describedby={error ? `${name}-error` : undefined}
  value={value}
>
  {placeholder && <option value="" disabled selected={!value}>{placeholder}</option>}
  {options.map(opt => (
    <option value={opt.value} selected={opt.value === value}>{opt.label}</option>
  ))}
</select>
{error && <p id={`${name}-error`} class="mt-1 text-xs text-red-600">{error}</p>} 